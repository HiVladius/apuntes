{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladm\\\\OneDrive\\\\Escritorio\\\\Practicas\\\\componentes\\\\src\\\\manejo-de-eventos-revisado.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState(10);\n\n  //Este es el uso de una funcion dentro de otra funcion\n\n  const setToValue = newValue => {\n    setValue(newValue);\n  };\n\n  //    Ahora podemos definir el controlador de eventos como una función que llama a la función \n  //    setToValue con un parámetro apropiado. El controlador de eventos para restablecer el estado \n  //    de la aplicación sería:\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [value, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setToValue(1000),\n      children: \"thousand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setToValue(0),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setToValue(value + 1),\n      children: \"incremet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"7UAQAh2ykPDdHAB4TCqEq4Uj1Jg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","value","setValue","setToValue","newValue"],"sources":["C:/Users/vladm/OneDrive/Escritorio/Practicas/componentes/src/manejo-de-eventos-revisado.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nconst App = () => {\r\n    const [value, setValue] = useState(10)\r\n\r\n    //Este es el uso de una funcion dentro de otra funcion\r\n\r\n    const setToValue = (newValue) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n\r\n    //    Ahora podemos definir el controlador de eventos como una función que llama a la función \r\n    //    setToValue con un parámetro apropiado. El controlador de eventos para restablecer el estado \r\n    //    de la aplicación sería:\r\n\r\n    return (\r\n        <div>\r\n            {value}\r\n            <button onClick={() => setToValue(1000)}>\r\n                thousand\r\n            </button>\r\n            <button onClick={() => setToValue(0)}>\r\n                reset\r\n            </button>\r\n            <button onClick={() => setToValue(value + 1)}>\r\n                incremet\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,MAAMC,GAAG,GAAG,MAAM;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;;EAEtC;;EAEA,MAAMI,UAAU,GAAIC,QAAQ,IAAK;IAC7BF,QAAQ,CAACE,QAAQ,CAAC;EACtB,CAAC;;EAGD;EACA;EACA;;EAEA,oBACI;IAAA,WACKH,KAAK,eACN;MAAQ,OAAO,EAAE,MAAME,UAAU,CAAC,IAAI,CAAE;MAAA,UAAC;IAEzC;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAE,MAAMA,UAAU,CAAC,CAAC,CAAE;MAAA,UAAC;IAEtC;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAE,MAAMA,UAAU,CAACF,KAAK,GAAG,CAAC,CAAE;MAAA,UAAC;IAE9C;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,GA5BKD,GAAG;AAAA,KAAHA,GAAG;AAiCT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}